#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
    
    Node(int val) : data(val), next(nullptr) {}
};

class SinglyLinkedList {
private:
    Node* head;
    
public:
    SinglyLinkedList() : head(nullptr) {}
    
    void insert(int data) {
        Node* newNode = new Node(data);
        
        if (head == nullptr) {
            head = newNode;
            return;
        }
        
        Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
    
    bool deleteNode(int key) {
        if (head == nullptr) {
            cout << "List is empty\n";
            return false;
        }
        
        if (head->data == key) {
            Node* temp = head;
            head = head->next;
            delete temp;
            return true;
        }
        
        Node* current = head;
        Node* prev = nullptr;
        
        while (current != nullptr && current->data != key) {
            prev = current;
            current = current->next;
        }
        
        if (current == nullptr) {
            cout << "Value " << key << " not found in the list\n";
            return false;
        }
        
        prev->next = current->next;
        delete current;
        return true;
    }
    
    void display() {
        Node* temp = head;
        if (temp == nullptr) {
            cout << "List is empty\n";
            return;
        }
        
        cout << "Linked List: ";
        while (temp != nullptr) {
            cout << temp->data;
            if (temp->next != nullptr) {
                cout << " -> ";
            }
            temp = temp->next;
        }
        cout << " -> NULL\n";
    }
    
    ~SinglyLinkedList() {
        Node* current = head;
        while (current != nullptr) {
            Node* next = current->next;
            delete current;
            current = next;
        }
    }
};

void displayMenu() {
    cout << "\nSingly Linked List Operations:\n";
    cout << "1. Insert value\n";
    cout << "2. Delete value\n";
    cout << "3. Display list\n";
    cout << "4. Exit\n";
    cout << "Enter your choice: ";
}

int main() {
    SinglyLinkedList list;
    int choice, value;
    
    while (true) {
        displayMenu();
        cin >> choice;
        
        switch (choice) {
            case 1:
                cout << "Enter value to insert: ";
                cin >> value;
                list.insert(value);
                cout << "Inserted " << value << " into the list.\n";
                break;
                
            case 2:
                cout << "Enter value to delete: ";
                cin >> value;
                if (list.deleteNode(value)) {
                    cout << "Successfully deleted " << value << " from the list.\n";
                }
                break;
                
            case 3:
                list.display();
                break;
                
            case 4:
                cout << "Exiting...\n";
                return 0;
                
            default:
                cout << "Invalid choice! Please try again.\n";
        }
    }
}